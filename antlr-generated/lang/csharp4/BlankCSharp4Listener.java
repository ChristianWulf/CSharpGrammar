package lang.csharp4;


import org.antlr.v4.runtime.ParserRuleContext;
import org.antlr.v4.runtime.Token;

public class BlankCSharp4Listener implements CSharp4Listener {
	@Override public void enterRule(CSharp4Parser.namespace_nameContext ctx) { }
	@Override public void exitRule(CSharp4Parser.namespace_nameContext ctx) { }
	@Override public void enterRule(CSharp4Parser.type_nameContext ctx) { }
	@Override public void exitRule(CSharp4Parser.type_nameContext ctx) { }
	@Override public void enterRule(CSharp4Parser.namespace_or_type_nameContext ctx) { }
	@Override public void exitRule(CSharp4Parser.namespace_or_type_nameContext ctx) { }
	@Override public void enterRule(CSharp4Parser.typeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.typeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.value_typeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.value_typeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.struct_typeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.struct_typeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.simple_typeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.simple_typeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.numeric_typeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.numeric_typeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.integral_typeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.integral_typeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.floating_point_typeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.floating_point_typeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.nullable_typeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.nullable_typeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.non_nullable_value_typeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.non_nullable_value_typeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.enum_typeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.enum_typeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.reference_typeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.reference_typeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.class_typeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.class_typeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.interface_typeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.interface_typeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.delegate_typeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.delegate_typeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.type_argument_listContext ctx) { }
	@Override public void exitRule(CSharp4Parser.type_argument_listContext ctx) { }
	@Override public void enterRule(CSharp4Parser.type_argumentsContext ctx) { }
	@Override public void exitRule(CSharp4Parser.type_argumentsContext ctx) { }
	@Override public void enterRule(CSharp4Parser.type_argumentContext ctx) { }
	@Override public void exitRule(CSharp4Parser.type_argumentContext ctx) { }
	@Override public void enterRule(CSharp4Parser.variable_referenceContext ctx) { }
	@Override public void exitRule(CSharp4Parser.variable_referenceContext ctx) { }
	@Override public void enterRule(CSharp4Parser.argument_listContext ctx) { }
	@Override public void exitRule(CSharp4Parser.argument_listContext ctx) { }
	@Override public void enterRule(CSharp4Parser.argumentContext ctx) { }
	@Override public void exitRule(CSharp4Parser.argumentContext ctx) { }
	@Override public void enterRule(CSharp4Parser.argument_nameContext ctx) { }
	@Override public void exitRule(CSharp4Parser.argument_nameContext ctx) { }
	@Override public void enterRule(CSharp4Parser.argument_valueContext ctx) { }
	@Override public void exitRule(CSharp4Parser.argument_valueContext ctx) { }
	@Override public void enterRule(CSharp4Parser.primary_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.primary_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.primary_no_array_creation_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.primary_no_array_creation_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.simple_nameContext ctx) { }
	@Override public void exitRule(CSharp4Parser.simple_nameContext ctx) { }
	@Override public void enterRule(CSharp4Parser.parenthesized_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.parenthesized_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.member_accessContext ctx) { }
	@Override public void exitRule(CSharp4Parser.member_accessContext ctx) { }
	@Override public void enterRule(CSharp4Parser.predefined_typeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.predefined_typeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.invocation_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.invocation_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.element_accessContext ctx) { }
	@Override public void exitRule(CSharp4Parser.element_accessContext ctx) { }
	@Override public void enterRule(CSharp4Parser.expression_listContext ctx) { }
	@Override public void exitRule(CSharp4Parser.expression_listContext ctx) { }
	@Override public void enterRule(CSharp4Parser.this_accessContext ctx) { }
	@Override public void exitRule(CSharp4Parser.this_accessContext ctx) { }
	@Override public void enterRule(CSharp4Parser.base_accessContext ctx) { }
	@Override public void exitRule(CSharp4Parser.base_accessContext ctx) { }
	@Override public void enterRule(CSharp4Parser.post_increment_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.post_increment_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.post_decrement_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.post_decrement_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.object_creation_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.object_creation_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.object_or_collection_initializerContext ctx) { }
	@Override public void exitRule(CSharp4Parser.object_or_collection_initializerContext ctx) { }
	@Override public void enterRule(CSharp4Parser.object_initializerContext ctx) { }
	@Override public void exitRule(CSharp4Parser.object_initializerContext ctx) { }
	@Override public void enterRule(CSharp4Parser.member_initializer_listContext ctx) { }
	@Override public void exitRule(CSharp4Parser.member_initializer_listContext ctx) { }
	@Override public void enterRule(CSharp4Parser.member_initializerContext ctx) { }
	@Override public void exitRule(CSharp4Parser.member_initializerContext ctx) { }
	@Override public void enterRule(CSharp4Parser.initializer_valueContext ctx) { }
	@Override public void exitRule(CSharp4Parser.initializer_valueContext ctx) { }
	@Override public void enterRule(CSharp4Parser.collection_initializerContext ctx) { }
	@Override public void exitRule(CSharp4Parser.collection_initializerContext ctx) { }
	@Override public void enterRule(CSharp4Parser.element_initializer_listContext ctx) { }
	@Override public void exitRule(CSharp4Parser.element_initializer_listContext ctx) { }
	@Override public void enterRule(CSharp4Parser.element_initializerContext ctx) { }
	@Override public void exitRule(CSharp4Parser.element_initializerContext ctx) { }
	@Override public void enterRule(CSharp4Parser.array_creation_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.array_creation_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.delegate_creation_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.delegate_creation_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.anonymous_object_creation_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.anonymous_object_creation_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.anonymous_object_initializerContext ctx) { }
	@Override public void exitRule(CSharp4Parser.anonymous_object_initializerContext ctx) { }
	@Override public void enterRule(CSharp4Parser.member_declarator_listContext ctx) { }
	@Override public void exitRule(CSharp4Parser.member_declarator_listContext ctx) { }
	@Override public void enterRule(CSharp4Parser.member_declaratorContext ctx) { }
	@Override public void exitRule(CSharp4Parser.member_declaratorContext ctx) { }
	@Override public void enterRule(CSharp4Parser.typeof_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.typeof_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.unbound_type_nameContext ctx) { }
	@Override public void exitRule(CSharp4Parser.unbound_type_nameContext ctx) { }
	@Override public void enterRule(CSharp4Parser.generic_dimension_specifierContext ctx) { }
	@Override public void exitRule(CSharp4Parser.generic_dimension_specifierContext ctx) { }
	@Override public void enterRule(CSharp4Parser.commasContext ctx) { }
	@Override public void exitRule(CSharp4Parser.commasContext ctx) { }
	@Override public void enterRule(CSharp4Parser.checked_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.checked_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.unchecked_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.unchecked_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.default_value_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.default_value_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.unary_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.unary_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.pre_increment_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.pre_increment_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.pre_decrement_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.pre_decrement_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.cast_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.cast_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.multiplicative_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.multiplicative_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.additive_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.additive_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.shift_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.shift_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.relational_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.relational_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.equality_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.equality_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.and_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.and_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.exclusive_or_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.exclusive_or_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.inclusive_or_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.inclusive_or_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.conditional_and_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.conditional_and_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.conditional_or_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.conditional_or_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.null_coalescing_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.null_coalescing_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.conditional_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.conditional_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.lambda_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.lambda_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.anonymous_method_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.anonymous_method_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.anonymous_function_signatureContext ctx) { }
	@Override public void exitRule(CSharp4Parser.anonymous_function_signatureContext ctx) { }
	@Override public void enterRule(CSharp4Parser.explicit_anonymous_function_signatureContext ctx) { }
	@Override public void exitRule(CSharp4Parser.explicit_anonymous_function_signatureContext ctx) { }
	@Override public void enterRule(CSharp4Parser.explicit_anonymous_function_parameter_listContext ctx) { }
	@Override public void exitRule(CSharp4Parser.explicit_anonymous_function_parameter_listContext ctx) { }
	@Override public void enterRule(CSharp4Parser.explicit_anonymous_function_parameterContext ctx) { }
	@Override public void exitRule(CSharp4Parser.explicit_anonymous_function_parameterContext ctx) { }
	@Override public void enterRule(CSharp4Parser.anonymous_function_parameter_modifierContext ctx) { }
	@Override public void exitRule(CSharp4Parser.anonymous_function_parameter_modifierContext ctx) { }
	@Override public void enterRule(CSharp4Parser.implicit_anonymous_function_signatureContext ctx) { }
	@Override public void exitRule(CSharp4Parser.implicit_anonymous_function_signatureContext ctx) { }
	@Override public void enterRule(CSharp4Parser.implicit_anonymous_function_parameter_listContext ctx) { }
	@Override public void exitRule(CSharp4Parser.implicit_anonymous_function_parameter_listContext ctx) { }
	@Override public void enterRule(CSharp4Parser.implicit_anonymous_function_parameterContext ctx) { }
	@Override public void exitRule(CSharp4Parser.implicit_anonymous_function_parameterContext ctx) { }
	@Override public void enterRule(CSharp4Parser.anonymous_function_bodyContext ctx) { }
	@Override public void exitRule(CSharp4Parser.anonymous_function_bodyContext ctx) { }
	@Override public void enterRule(CSharp4Parser.query_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.query_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.from_clauseContext ctx) { }
	@Override public void exitRule(CSharp4Parser.from_clauseContext ctx) { }
	@Override public void enterRule(CSharp4Parser.query_bodyContext ctx) { }
	@Override public void exitRule(CSharp4Parser.query_bodyContext ctx) { }
	@Override public void enterRule(CSharp4Parser.query_body_clausesContext ctx) { }
	@Override public void exitRule(CSharp4Parser.query_body_clausesContext ctx) { }
	@Override public void enterRule(CSharp4Parser.query_body_clauseContext ctx) { }
	@Override public void exitRule(CSharp4Parser.query_body_clauseContext ctx) { }
	@Override public void enterRule(CSharp4Parser.let_clauseContext ctx) { }
	@Override public void exitRule(CSharp4Parser.let_clauseContext ctx) { }
	@Override public void enterRule(CSharp4Parser.where_clauseContext ctx) { }
	@Override public void exitRule(CSharp4Parser.where_clauseContext ctx) { }
	@Override public void enterRule(CSharp4Parser.join_clauseContext ctx) { }
	@Override public void exitRule(CSharp4Parser.join_clauseContext ctx) { }
	@Override public void enterRule(CSharp4Parser.join_into_clauseContext ctx) { }
	@Override public void exitRule(CSharp4Parser.join_into_clauseContext ctx) { }
	@Override public void enterRule(CSharp4Parser.orderby_clauseContext ctx) { }
	@Override public void exitRule(CSharp4Parser.orderby_clauseContext ctx) { }
	@Override public void enterRule(CSharp4Parser.orderingsContext ctx) { }
	@Override public void exitRule(CSharp4Parser.orderingsContext ctx) { }
	@Override public void enterRule(CSharp4Parser.orderingContext ctx) { }
	@Override public void exitRule(CSharp4Parser.orderingContext ctx) { }
	@Override public void enterRule(CSharp4Parser.ordering_directionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.ordering_directionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.select_or_group_clauseContext ctx) { }
	@Override public void exitRule(CSharp4Parser.select_or_group_clauseContext ctx) { }
	@Override public void enterRule(CSharp4Parser.select_clauseContext ctx) { }
	@Override public void exitRule(CSharp4Parser.select_clauseContext ctx) { }
	@Override public void enterRule(CSharp4Parser.group_clauseContext ctx) { }
	@Override public void exitRule(CSharp4Parser.group_clauseContext ctx) { }
	@Override public void enterRule(CSharp4Parser.query_continuationContext ctx) { }
	@Override public void exitRule(CSharp4Parser.query_continuationContext ctx) { }
	@Override public void enterRule(CSharp4Parser.assignmentContext ctx) { }
	@Override public void exitRule(CSharp4Parser.assignmentContext ctx) { }
	@Override public void enterRule(CSharp4Parser.assignment_operatorContext ctx) { }
	@Override public void exitRule(CSharp4Parser.assignment_operatorContext ctx) { }
	@Override public void enterRule(CSharp4Parser.expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.non_assignment_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.non_assignment_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.constant_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.constant_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.boolean_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.boolean_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.statementContext ctx) { }
	@Override public void exitRule(CSharp4Parser.statementContext ctx) { }
	@Override public void enterRule(CSharp4Parser.embedded_statementContext ctx) { }
	@Override public void exitRule(CSharp4Parser.embedded_statementContext ctx) { }
	@Override public void enterRule(CSharp4Parser.blockContext ctx) { }
	@Override public void exitRule(CSharp4Parser.blockContext ctx) { }
	@Override public void enterRule(CSharp4Parser.statement_listContext ctx) { }
	@Override public void exitRule(CSharp4Parser.statement_listContext ctx) { }
	@Override public void enterRule(CSharp4Parser.empty_statementContext ctx) { }
	@Override public void exitRule(CSharp4Parser.empty_statementContext ctx) { }
	@Override public void enterRule(CSharp4Parser.labeled_statementContext ctx) { }
	@Override public void exitRule(CSharp4Parser.labeled_statementContext ctx) { }
	@Override public void enterRule(CSharp4Parser.declaration_statementContext ctx) { }
	@Override public void exitRule(CSharp4Parser.declaration_statementContext ctx) { }
	@Override public void enterRule(CSharp4Parser.local_variable_declarationContext ctx) { }
	@Override public void exitRule(CSharp4Parser.local_variable_declarationContext ctx) { }
	@Override public void enterRule(CSharp4Parser.local_variable_typeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.local_variable_typeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.local_variable_declaratorsContext ctx) { }
	@Override public void exitRule(CSharp4Parser.local_variable_declaratorsContext ctx) { }
	@Override public void enterRule(CSharp4Parser.local_variable_declaratorContext ctx) { }
	@Override public void exitRule(CSharp4Parser.local_variable_declaratorContext ctx) { }
	@Override public void enterRule(CSharp4Parser.local_variable_initializerContext ctx) { }
	@Override public void exitRule(CSharp4Parser.local_variable_initializerContext ctx) { }
	@Override public void enterRule(CSharp4Parser.local_constant_declarationContext ctx) { }
	@Override public void exitRule(CSharp4Parser.local_constant_declarationContext ctx) { }
	@Override public void enterRule(CSharp4Parser.expression_statementContext ctx) { }
	@Override public void exitRule(CSharp4Parser.expression_statementContext ctx) { }
	@Override public void enterRule(CSharp4Parser.statement_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.statement_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.selection_statementContext ctx) { }
	@Override public void exitRule(CSharp4Parser.selection_statementContext ctx) { }
	@Override public void enterRule(CSharp4Parser.if_statementContext ctx) { }
	@Override public void exitRule(CSharp4Parser.if_statementContext ctx) { }
	@Override public void enterRule(CSharp4Parser.switch_statementContext ctx) { }
	@Override public void exitRule(CSharp4Parser.switch_statementContext ctx) { }
	@Override public void enterRule(CSharp4Parser.switch_blockContext ctx) { }
	@Override public void exitRule(CSharp4Parser.switch_blockContext ctx) { }
	@Override public void enterRule(CSharp4Parser.switch_sectionsContext ctx) { }
	@Override public void exitRule(CSharp4Parser.switch_sectionsContext ctx) { }
	@Override public void enterRule(CSharp4Parser.switch_sectionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.switch_sectionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.switch_labelsContext ctx) { }
	@Override public void exitRule(CSharp4Parser.switch_labelsContext ctx) { }
	@Override public void enterRule(CSharp4Parser.switch_labelContext ctx) { }
	@Override public void exitRule(CSharp4Parser.switch_labelContext ctx) { }
	@Override public void enterRule(CSharp4Parser.iteration_statementContext ctx) { }
	@Override public void exitRule(CSharp4Parser.iteration_statementContext ctx) { }
	@Override public void enterRule(CSharp4Parser.while_statementContext ctx) { }
	@Override public void exitRule(CSharp4Parser.while_statementContext ctx) { }
	@Override public void enterRule(CSharp4Parser.do_statementContext ctx) { }
	@Override public void exitRule(CSharp4Parser.do_statementContext ctx) { }
	@Override public void enterRule(CSharp4Parser.for_statementContext ctx) { }
	@Override public void exitRule(CSharp4Parser.for_statementContext ctx) { }
	@Override public void enterRule(CSharp4Parser.for_initializerContext ctx) { }
	@Override public void exitRule(CSharp4Parser.for_initializerContext ctx) { }
	@Override public void enterRule(CSharp4Parser.for_conditionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.for_conditionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.for_iteratorContext ctx) { }
	@Override public void exitRule(CSharp4Parser.for_iteratorContext ctx) { }
	@Override public void enterRule(CSharp4Parser.statement_expression_listContext ctx) { }
	@Override public void exitRule(CSharp4Parser.statement_expression_listContext ctx) { }
	@Override public void enterRule(CSharp4Parser.foreach_statementContext ctx) { }
	@Override public void exitRule(CSharp4Parser.foreach_statementContext ctx) { }
	@Override public void enterRule(CSharp4Parser.jump_statementContext ctx) { }
	@Override public void exitRule(CSharp4Parser.jump_statementContext ctx) { }
	@Override public void enterRule(CSharp4Parser.break_statementContext ctx) { }
	@Override public void exitRule(CSharp4Parser.break_statementContext ctx) { }
	@Override public void enterRule(CSharp4Parser.continue_statementContext ctx) { }
	@Override public void exitRule(CSharp4Parser.continue_statementContext ctx) { }
	@Override public void enterRule(CSharp4Parser.goto_statementContext ctx) { }
	@Override public void exitRule(CSharp4Parser.goto_statementContext ctx) { }
	@Override public void enterRule(CSharp4Parser.return_statementContext ctx) { }
	@Override public void exitRule(CSharp4Parser.return_statementContext ctx) { }
	@Override public void enterRule(CSharp4Parser.throw_statementContext ctx) { }
	@Override public void exitRule(CSharp4Parser.throw_statementContext ctx) { }
	@Override public void enterRule(CSharp4Parser.try_statementContext ctx) { }
	@Override public void exitRule(CSharp4Parser.try_statementContext ctx) { }
	@Override public void enterRule(CSharp4Parser.catch_clausesContext ctx) { }
	@Override public void exitRule(CSharp4Parser.catch_clausesContext ctx) { }
	@Override public void enterRule(CSharp4Parser.specific_catch_clausesContext ctx) { }
	@Override public void exitRule(CSharp4Parser.specific_catch_clausesContext ctx) { }
	@Override public void enterRule(CSharp4Parser.specific_catch_clauseContext ctx) { }
	@Override public void exitRule(CSharp4Parser.specific_catch_clauseContext ctx) { }
	@Override public void enterRule(CSharp4Parser.general_catch_clauseContext ctx) { }
	@Override public void exitRule(CSharp4Parser.general_catch_clauseContext ctx) { }
	@Override public void enterRule(CSharp4Parser.finally_clauseContext ctx) { }
	@Override public void exitRule(CSharp4Parser.finally_clauseContext ctx) { }
	@Override public void enterRule(CSharp4Parser.checked_statementContext ctx) { }
	@Override public void exitRule(CSharp4Parser.checked_statementContext ctx) { }
	@Override public void enterRule(CSharp4Parser.unchecked_statementContext ctx) { }
	@Override public void exitRule(CSharp4Parser.unchecked_statementContext ctx) { }
	@Override public void enterRule(CSharp4Parser.lock_statementContext ctx) { }
	@Override public void exitRule(CSharp4Parser.lock_statementContext ctx) { }
	@Override public void enterRule(CSharp4Parser.using_statementContext ctx) { }
	@Override public void exitRule(CSharp4Parser.using_statementContext ctx) { }
	@Override public void enterRule(CSharp4Parser.resource_acquisitionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.resource_acquisitionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.yield_statementContext ctx) { }
	@Override public void exitRule(CSharp4Parser.yield_statementContext ctx) { }
	@Override public void enterRule(CSharp4Parser.compilation_unitContext ctx) { }
	@Override public void exitRule(CSharp4Parser.compilation_unitContext ctx) { }
	@Override public void enterRule(CSharp4Parser.namespace_declarationContext ctx) { }
	@Override public void exitRule(CSharp4Parser.namespace_declarationContext ctx) { }
	@Override public void enterRule(CSharp4Parser.qualified_identifierContext ctx) { }
	@Override public void exitRule(CSharp4Parser.qualified_identifierContext ctx) { }
	@Override public void enterRule(CSharp4Parser.namespace_bodyContext ctx) { }
	@Override public void exitRule(CSharp4Parser.namespace_bodyContext ctx) { }
	@Override public void enterRule(CSharp4Parser.extern_alias_directivesContext ctx) { }
	@Override public void exitRule(CSharp4Parser.extern_alias_directivesContext ctx) { }
	@Override public void enterRule(CSharp4Parser.extern_alias_directiveContext ctx) { }
	@Override public void exitRule(CSharp4Parser.extern_alias_directiveContext ctx) { }
	@Override public void enterRule(CSharp4Parser.using_directivesContext ctx) { }
	@Override public void exitRule(CSharp4Parser.using_directivesContext ctx) { }
	@Override public void enterRule(CSharp4Parser.using_directiveContext ctx) { }
	@Override public void exitRule(CSharp4Parser.using_directiveContext ctx) { }
	@Override public void enterRule(CSharp4Parser.using_alias_directiveContext ctx) { }
	@Override public void exitRule(CSharp4Parser.using_alias_directiveContext ctx) { }
	@Override public void enterRule(CSharp4Parser.using_namespace_directiveContext ctx) { }
	@Override public void exitRule(CSharp4Parser.using_namespace_directiveContext ctx) { }
	@Override public void enterRule(CSharp4Parser.namespace_member_declarationsContext ctx) { }
	@Override public void exitRule(CSharp4Parser.namespace_member_declarationsContext ctx) { }
	@Override public void enterRule(CSharp4Parser.namespace_member_declarationContext ctx) { }
	@Override public void exitRule(CSharp4Parser.namespace_member_declarationContext ctx) { }
	@Override public void enterRule(CSharp4Parser.type_declarationContext ctx) { }
	@Override public void exitRule(CSharp4Parser.type_declarationContext ctx) { }
	@Override public void enterRule(CSharp4Parser.qualified_alias_memberContext ctx) { }
	@Override public void exitRule(CSharp4Parser.qualified_alias_memberContext ctx) { }
	@Override public void enterRule(CSharp4Parser.class_declarationContext ctx) { }
	@Override public void exitRule(CSharp4Parser.class_declarationContext ctx) { }
	@Override public void enterRule(CSharp4Parser.class_modifiersContext ctx) { }
	@Override public void exitRule(CSharp4Parser.class_modifiersContext ctx) { }
	@Override public void enterRule(CSharp4Parser.class_modifierContext ctx) { }
	@Override public void exitRule(CSharp4Parser.class_modifierContext ctx) { }
	@Override public void enterRule(CSharp4Parser.type_parameter_listContext ctx) { }
	@Override public void exitRule(CSharp4Parser.type_parameter_listContext ctx) { }
	@Override public void enterRule(CSharp4Parser.type_parametersContext ctx) { }
	@Override public void exitRule(CSharp4Parser.type_parametersContext ctx) { }
	@Override public void enterRule(CSharp4Parser.type_parameterContext ctx) { }
	@Override public void exitRule(CSharp4Parser.type_parameterContext ctx) { }
	@Override public void enterRule(CSharp4Parser.class_baseContext ctx) { }
	@Override public void exitRule(CSharp4Parser.class_baseContext ctx) { }
	@Override public void enterRule(CSharp4Parser.interface_type_listContext ctx) { }
	@Override public void exitRule(CSharp4Parser.interface_type_listContext ctx) { }
	@Override public void enterRule(CSharp4Parser.type_parameter_constraints_clausesContext ctx) { }
	@Override public void exitRule(CSharp4Parser.type_parameter_constraints_clausesContext ctx) { }
	@Override public void enterRule(CSharp4Parser.type_parameter_constraints_clauseContext ctx) { }
	@Override public void exitRule(CSharp4Parser.type_parameter_constraints_clauseContext ctx) { }
	@Override public void enterRule(CSharp4Parser.type_parameter_constraintsContext ctx) { }
	@Override public void exitRule(CSharp4Parser.type_parameter_constraintsContext ctx) { }
	@Override public void enterRule(CSharp4Parser.primary_constraintContext ctx) { }
	@Override public void exitRule(CSharp4Parser.primary_constraintContext ctx) { }
	@Override public void enterRule(CSharp4Parser.secondary_constraintsContext ctx) { }
	@Override public void exitRule(CSharp4Parser.secondary_constraintsContext ctx) { }
	@Override public void enterRule(CSharp4Parser.constructor_constraintContext ctx) { }
	@Override public void exitRule(CSharp4Parser.constructor_constraintContext ctx) { }
	@Override public void enterRule(CSharp4Parser.class_bodyContext ctx) { }
	@Override public void exitRule(CSharp4Parser.class_bodyContext ctx) { }
	@Override public void enterRule(CSharp4Parser.class_member_declarationsContext ctx) { }
	@Override public void exitRule(CSharp4Parser.class_member_declarationsContext ctx) { }
	@Override public void enterRule(CSharp4Parser.class_member_declarationContext ctx) { }
	@Override public void exitRule(CSharp4Parser.class_member_declarationContext ctx) { }
	@Override public void enterRule(CSharp4Parser.constant_declarationContext ctx) { }
	@Override public void exitRule(CSharp4Parser.constant_declarationContext ctx) { }
	@Override public void enterRule(CSharp4Parser.constant_modifiersContext ctx) { }
	@Override public void exitRule(CSharp4Parser.constant_modifiersContext ctx) { }
	@Override public void enterRule(CSharp4Parser.constant_modifierContext ctx) { }
	@Override public void exitRule(CSharp4Parser.constant_modifierContext ctx) { }
	@Override public void enterRule(CSharp4Parser.constant_declaratorsContext ctx) { }
	@Override public void exitRule(CSharp4Parser.constant_declaratorsContext ctx) { }
	@Override public void enterRule(CSharp4Parser.constant_declaratorContext ctx) { }
	@Override public void exitRule(CSharp4Parser.constant_declaratorContext ctx) { }
	@Override public void enterRule(CSharp4Parser.field_declarationContext ctx) { }
	@Override public void exitRule(CSharp4Parser.field_declarationContext ctx) { }
	@Override public void enterRule(CSharp4Parser.field_modifiersContext ctx) { }
	@Override public void exitRule(CSharp4Parser.field_modifiersContext ctx) { }
	@Override public void enterRule(CSharp4Parser.field_modifierContext ctx) { }
	@Override public void exitRule(CSharp4Parser.field_modifierContext ctx) { }
	@Override public void enterRule(CSharp4Parser.variable_declaratorsContext ctx) { }
	@Override public void exitRule(CSharp4Parser.variable_declaratorsContext ctx) { }
	@Override public void enterRule(CSharp4Parser.variable_declaratorContext ctx) { }
	@Override public void exitRule(CSharp4Parser.variable_declaratorContext ctx) { }
	@Override public void enterRule(CSharp4Parser.variable_initializerContext ctx) { }
	@Override public void exitRule(CSharp4Parser.variable_initializerContext ctx) { }
	@Override public void enterRule(CSharp4Parser.method_declarationContext ctx) { }
	@Override public void exitRule(CSharp4Parser.method_declarationContext ctx) { }
	@Override public void enterRule(CSharp4Parser.method_headerContext ctx) { }
	@Override public void exitRule(CSharp4Parser.method_headerContext ctx) { }
	@Override public void enterRule(CSharp4Parser.method_modifiersContext ctx) { }
	@Override public void exitRule(CSharp4Parser.method_modifiersContext ctx) { }
	@Override public void enterRule(CSharp4Parser.method_modifierContext ctx) { }
	@Override public void exitRule(CSharp4Parser.method_modifierContext ctx) { }
	@Override public void enterRule(CSharp4Parser.return_typeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.return_typeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.member_nameContext ctx) { }
	@Override public void exitRule(CSharp4Parser.member_nameContext ctx) { }
	@Override public void enterRule(CSharp4Parser.method_bodyContext ctx) { }
	@Override public void exitRule(CSharp4Parser.method_bodyContext ctx) { }
	@Override public void enterRule(CSharp4Parser.formal_parameter_listContext ctx) { }
	@Override public void exitRule(CSharp4Parser.formal_parameter_listContext ctx) { }
	@Override public void enterRule(CSharp4Parser.fixed_parametersContext ctx) { }
	@Override public void exitRule(CSharp4Parser.fixed_parametersContext ctx) { }
	@Override public void enterRule(CSharp4Parser.fixed_parameterContext ctx) { }
	@Override public void exitRule(CSharp4Parser.fixed_parameterContext ctx) { }
	@Override public void enterRule(CSharp4Parser.default_argumentContext ctx) { }
	@Override public void exitRule(CSharp4Parser.default_argumentContext ctx) { }
	@Override public void enterRule(CSharp4Parser.parameter_modifierContext ctx) { }
	@Override public void exitRule(CSharp4Parser.parameter_modifierContext ctx) { }
	@Override public void enterRule(CSharp4Parser.parameter_arrayContext ctx) { }
	@Override public void exitRule(CSharp4Parser.parameter_arrayContext ctx) { }
	@Override public void enterRule(CSharp4Parser.property_declarationContext ctx) { }
	@Override public void exitRule(CSharp4Parser.property_declarationContext ctx) { }
	@Override public void enterRule(CSharp4Parser.property_modifiersContext ctx) { }
	@Override public void exitRule(CSharp4Parser.property_modifiersContext ctx) { }
	@Override public void enterRule(CSharp4Parser.property_modifierContext ctx) { }
	@Override public void exitRule(CSharp4Parser.property_modifierContext ctx) { }
	@Override public void enterRule(CSharp4Parser.accessor_declarationsContext ctx) { }
	@Override public void exitRule(CSharp4Parser.accessor_declarationsContext ctx) { }
	@Override public void enterRule(CSharp4Parser.get_accessor_declarationContext ctx) { }
	@Override public void exitRule(CSharp4Parser.get_accessor_declarationContext ctx) { }
	@Override public void enterRule(CSharp4Parser.set_accessor_declarationContext ctx) { }
	@Override public void exitRule(CSharp4Parser.set_accessor_declarationContext ctx) { }
	@Override public void enterRule(CSharp4Parser.accessor_modifierContext ctx) { }
	@Override public void exitRule(CSharp4Parser.accessor_modifierContext ctx) { }
	@Override public void enterRule(CSharp4Parser.accessor_bodyContext ctx) { }
	@Override public void exitRule(CSharp4Parser.accessor_bodyContext ctx) { }
	@Override public void enterRule(CSharp4Parser.event_declarationContext ctx) { }
	@Override public void exitRule(CSharp4Parser.event_declarationContext ctx) { }
	@Override public void enterRule(CSharp4Parser.event_modifiersContext ctx) { }
	@Override public void exitRule(CSharp4Parser.event_modifiersContext ctx) { }
	@Override public void enterRule(CSharp4Parser.event_modifierContext ctx) { }
	@Override public void exitRule(CSharp4Parser.event_modifierContext ctx) { }
	@Override public void enterRule(CSharp4Parser.event_accessor_declarationsContext ctx) { }
	@Override public void exitRule(CSharp4Parser.event_accessor_declarationsContext ctx) { }
	@Override public void enterRule(CSharp4Parser.add_accessor_declarationContext ctx) { }
	@Override public void exitRule(CSharp4Parser.add_accessor_declarationContext ctx) { }
	@Override public void enterRule(CSharp4Parser.remove_accessor_declarationContext ctx) { }
	@Override public void exitRule(CSharp4Parser.remove_accessor_declarationContext ctx) { }
	@Override public void enterRule(CSharp4Parser.indexer_declarationContext ctx) { }
	@Override public void exitRule(CSharp4Parser.indexer_declarationContext ctx) { }
	@Override public void enterRule(CSharp4Parser.indexer_modifiersContext ctx) { }
	@Override public void exitRule(CSharp4Parser.indexer_modifiersContext ctx) { }
	@Override public void enterRule(CSharp4Parser.indexer_modifierContext ctx) { }
	@Override public void exitRule(CSharp4Parser.indexer_modifierContext ctx) { }
	@Override public void enterRule(CSharp4Parser.indexer_declaratorContext ctx) { }
	@Override public void exitRule(CSharp4Parser.indexer_declaratorContext ctx) { }
	@Override public void enterRule(CSharp4Parser.operator_declarationContext ctx) { }
	@Override public void exitRule(CSharp4Parser.operator_declarationContext ctx) { }
	@Override public void enterRule(CSharp4Parser.operator_modifiersContext ctx) { }
	@Override public void exitRule(CSharp4Parser.operator_modifiersContext ctx) { }
	@Override public void enterRule(CSharp4Parser.operator_modifierContext ctx) { }
	@Override public void exitRule(CSharp4Parser.operator_modifierContext ctx) { }
	@Override public void enterRule(CSharp4Parser.operator_declaratorContext ctx) { }
	@Override public void exitRule(CSharp4Parser.operator_declaratorContext ctx) { }
	@Override public void enterRule(CSharp4Parser.unary_operator_declaratorContext ctx) { }
	@Override public void exitRule(CSharp4Parser.unary_operator_declaratorContext ctx) { }
	@Override public void enterRule(CSharp4Parser.overloadable_unary_operatorContext ctx) { }
	@Override public void exitRule(CSharp4Parser.overloadable_unary_operatorContext ctx) { }
	@Override public void enterRule(CSharp4Parser.binary_operator_declaratorContext ctx) { }
	@Override public void exitRule(CSharp4Parser.binary_operator_declaratorContext ctx) { }
	@Override public void enterRule(CSharp4Parser.overloadable_binary_operatorContext ctx) { }
	@Override public void exitRule(CSharp4Parser.overloadable_binary_operatorContext ctx) { }
	@Override public void enterRule(CSharp4Parser.conversion_operator_declaratorContext ctx) { }
	@Override public void exitRule(CSharp4Parser.conversion_operator_declaratorContext ctx) { }
	@Override public void enterRule(CSharp4Parser.operator_bodyContext ctx) { }
	@Override public void exitRule(CSharp4Parser.operator_bodyContext ctx) { }
	@Override public void enterRule(CSharp4Parser.constructor_declarationContext ctx) { }
	@Override public void exitRule(CSharp4Parser.constructor_declarationContext ctx) { }
	@Override public void enterRule(CSharp4Parser.constructor_modifiersContext ctx) { }
	@Override public void exitRule(CSharp4Parser.constructor_modifiersContext ctx) { }
	@Override public void enterRule(CSharp4Parser.constructor_modifierContext ctx) { }
	@Override public void exitRule(CSharp4Parser.constructor_modifierContext ctx) { }
	@Override public void enterRule(CSharp4Parser.constructor_declaratorContext ctx) { }
	@Override public void exitRule(CSharp4Parser.constructor_declaratorContext ctx) { }
	@Override public void enterRule(CSharp4Parser.constructor_initializerContext ctx) { }
	@Override public void exitRule(CSharp4Parser.constructor_initializerContext ctx) { }
	@Override public void enterRule(CSharp4Parser.constructor_bodyContext ctx) { }
	@Override public void exitRule(CSharp4Parser.constructor_bodyContext ctx) { }
	@Override public void enterRule(CSharp4Parser.static_constructor_declarationContext ctx) { }
	@Override public void exitRule(CSharp4Parser.static_constructor_declarationContext ctx) { }
	@Override public void enterRule(CSharp4Parser.static_constructor_modifiersContext ctx) { }
	@Override public void exitRule(CSharp4Parser.static_constructor_modifiersContext ctx) { }
	@Override public void enterRule(CSharp4Parser.static_constructor_bodyContext ctx) { }
	@Override public void exitRule(CSharp4Parser.static_constructor_bodyContext ctx) { }
	@Override public void enterRule(CSharp4Parser.destructor_declarationContext ctx) { }
	@Override public void exitRule(CSharp4Parser.destructor_declarationContext ctx) { }
	@Override public void enterRule(CSharp4Parser.destructor_bodyContext ctx) { }
	@Override public void exitRule(CSharp4Parser.destructor_bodyContext ctx) { }
	@Override public void enterRule(CSharp4Parser.struct_declarationContext ctx) { }
	@Override public void exitRule(CSharp4Parser.struct_declarationContext ctx) { }
	@Override public void enterRule(CSharp4Parser.struct_modifiersContext ctx) { }
	@Override public void exitRule(CSharp4Parser.struct_modifiersContext ctx) { }
	@Override public void enterRule(CSharp4Parser.struct_modifierContext ctx) { }
	@Override public void exitRule(CSharp4Parser.struct_modifierContext ctx) { }
	@Override public void enterRule(CSharp4Parser.struct_interfacesContext ctx) { }
	@Override public void exitRule(CSharp4Parser.struct_interfacesContext ctx) { }
	@Override public void enterRule(CSharp4Parser.struct_bodyContext ctx) { }
	@Override public void exitRule(CSharp4Parser.struct_bodyContext ctx) { }
	@Override public void enterRule(CSharp4Parser.struct_member_declarationsContext ctx) { }
	@Override public void exitRule(CSharp4Parser.struct_member_declarationsContext ctx) { }
	@Override public void enterRule(CSharp4Parser.struct_member_declarationContext ctx) { }
	@Override public void exitRule(CSharp4Parser.struct_member_declarationContext ctx) { }
	@Override public void enterRule(CSharp4Parser.array_typeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.array_typeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.non_array_typeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.non_array_typeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.rank_specifiersContext ctx) { }
	@Override public void exitRule(CSharp4Parser.rank_specifiersContext ctx) { }
	@Override public void enterRule(CSharp4Parser.rank_specifierContext ctx) { }
	@Override public void exitRule(CSharp4Parser.rank_specifierContext ctx) { }
	@Override public void enterRule(CSharp4Parser.dim_separatorsContext ctx) { }
	@Override public void exitRule(CSharp4Parser.dim_separatorsContext ctx) { }
	@Override public void enterRule(CSharp4Parser.array_initializerContext ctx) { }
	@Override public void exitRule(CSharp4Parser.array_initializerContext ctx) { }
	@Override public void enterRule(CSharp4Parser.variable_initializer_listContext ctx) { }
	@Override public void exitRule(CSharp4Parser.variable_initializer_listContext ctx) { }
	@Override public void enterRule(CSharp4Parser.interface_declarationContext ctx) { }
	@Override public void exitRule(CSharp4Parser.interface_declarationContext ctx) { }
	@Override public void enterRule(CSharp4Parser.interface_modifiersContext ctx) { }
	@Override public void exitRule(CSharp4Parser.interface_modifiersContext ctx) { }
	@Override public void enterRule(CSharp4Parser.interface_modifierContext ctx) { }
	@Override public void exitRule(CSharp4Parser.interface_modifierContext ctx) { }
	@Override public void enterRule(CSharp4Parser.variant_type_parameter_listContext ctx) { }
	@Override public void exitRule(CSharp4Parser.variant_type_parameter_listContext ctx) { }
	@Override public void enterRule(CSharp4Parser.variant_type_parametersContext ctx) { }
	@Override public void exitRule(CSharp4Parser.variant_type_parametersContext ctx) { }
	@Override public void enterRule(CSharp4Parser.variance_annotationContext ctx) { }
	@Override public void exitRule(CSharp4Parser.variance_annotationContext ctx) { }
	@Override public void enterRule(CSharp4Parser.interface_baseContext ctx) { }
	@Override public void exitRule(CSharp4Parser.interface_baseContext ctx) { }
	@Override public void enterRule(CSharp4Parser.interface_bodyContext ctx) { }
	@Override public void exitRule(CSharp4Parser.interface_bodyContext ctx) { }
	@Override public void enterRule(CSharp4Parser.interface_member_declarationsContext ctx) { }
	@Override public void exitRule(CSharp4Parser.interface_member_declarationsContext ctx) { }
	@Override public void enterRule(CSharp4Parser.interface_member_declarationContext ctx) { }
	@Override public void exitRule(CSharp4Parser.interface_member_declarationContext ctx) { }
	@Override public void enterRule(CSharp4Parser.interface_method_declarationContext ctx) { }
	@Override public void exitRule(CSharp4Parser.interface_method_declarationContext ctx) { }
	@Override public void enterRule(CSharp4Parser.interface_property_declarationContext ctx) { }
	@Override public void exitRule(CSharp4Parser.interface_property_declarationContext ctx) { }
	@Override public void enterRule(CSharp4Parser.interface_accessorsContext ctx) { }
	@Override public void exitRule(CSharp4Parser.interface_accessorsContext ctx) { }
	@Override public void enterRule(CSharp4Parser.interface_event_declarationContext ctx) { }
	@Override public void exitRule(CSharp4Parser.interface_event_declarationContext ctx) { }
	@Override public void enterRule(CSharp4Parser.interface_indexer_declarationContext ctx) { }
	@Override public void exitRule(CSharp4Parser.interface_indexer_declarationContext ctx) { }
	@Override public void enterRule(CSharp4Parser.enum_declarationContext ctx) { }
	@Override public void exitRule(CSharp4Parser.enum_declarationContext ctx) { }
	@Override public void enterRule(CSharp4Parser.enum_baseContext ctx) { }
	@Override public void exitRule(CSharp4Parser.enum_baseContext ctx) { }
	@Override public void enterRule(CSharp4Parser.enum_bodyContext ctx) { }
	@Override public void exitRule(CSharp4Parser.enum_bodyContext ctx) { }
	@Override public void enterRule(CSharp4Parser.enum_modifiersContext ctx) { }
	@Override public void exitRule(CSharp4Parser.enum_modifiersContext ctx) { }
	@Override public void enterRule(CSharp4Parser.enum_modifierContext ctx) { }
	@Override public void exitRule(CSharp4Parser.enum_modifierContext ctx) { }
	@Override public void enterRule(CSharp4Parser.enum_member_declarationsContext ctx) { }
	@Override public void exitRule(CSharp4Parser.enum_member_declarationsContext ctx) { }
	@Override public void enterRule(CSharp4Parser.enum_member_declarationContext ctx) { }
	@Override public void exitRule(CSharp4Parser.enum_member_declarationContext ctx) { }
	@Override public void enterRule(CSharp4Parser.delegate_declarationContext ctx) { }
	@Override public void exitRule(CSharp4Parser.delegate_declarationContext ctx) { }
	@Override public void enterRule(CSharp4Parser.delegate_modifiersContext ctx) { }
	@Override public void exitRule(CSharp4Parser.delegate_modifiersContext ctx) { }
	@Override public void enterRule(CSharp4Parser.delegate_modifierContext ctx) { }
	@Override public void exitRule(CSharp4Parser.delegate_modifierContext ctx) { }
	@Override public void enterRule(CSharp4Parser.global_attributesContext ctx) { }
	@Override public void exitRule(CSharp4Parser.global_attributesContext ctx) { }
	@Override public void enterRule(CSharp4Parser.global_attribute_sectionsContext ctx) { }
	@Override public void exitRule(CSharp4Parser.global_attribute_sectionsContext ctx) { }
	@Override public void enterRule(CSharp4Parser.global_attribute_sectionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.global_attribute_sectionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.global_attribute_target_specifierContext ctx) { }
	@Override public void exitRule(CSharp4Parser.global_attribute_target_specifierContext ctx) { }
	@Override public void enterRule(CSharp4Parser.global_attribute_targetContext ctx) { }
	@Override public void exitRule(CSharp4Parser.global_attribute_targetContext ctx) { }
	@Override public void enterRule(CSharp4Parser.attributesContext ctx) { }
	@Override public void exitRule(CSharp4Parser.attributesContext ctx) { }
	@Override public void enterRule(CSharp4Parser.attribute_sectionsContext ctx) { }
	@Override public void exitRule(CSharp4Parser.attribute_sectionsContext ctx) { }
	@Override public void enterRule(CSharp4Parser.attribute_sectionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.attribute_sectionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.attribute_target_specifierContext ctx) { }
	@Override public void exitRule(CSharp4Parser.attribute_target_specifierContext ctx) { }
	@Override public void enterRule(CSharp4Parser.attribute_targetContext ctx) { }
	@Override public void exitRule(CSharp4Parser.attribute_targetContext ctx) { }
	@Override public void enterRule(CSharp4Parser.attribute_listContext ctx) { }
	@Override public void exitRule(CSharp4Parser.attribute_listContext ctx) { }
	@Override public void enterRule(CSharp4Parser.attributeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.attributeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.attribute_nameContext ctx) { }
	@Override public void exitRule(CSharp4Parser.attribute_nameContext ctx) { }
	@Override public void enterRule(CSharp4Parser.attribute_argumentsContext ctx) { }
	@Override public void exitRule(CSharp4Parser.attribute_argumentsContext ctx) { }
	@Override public void enterRule(CSharp4Parser.positional_argument_listContext ctx) { }
	@Override public void exitRule(CSharp4Parser.positional_argument_listContext ctx) { }
	@Override public void enterRule(CSharp4Parser.positional_argumentContext ctx) { }
	@Override public void exitRule(CSharp4Parser.positional_argumentContext ctx) { }
	@Override public void enterRule(CSharp4Parser.named_argument_listContext ctx) { }
	@Override public void exitRule(CSharp4Parser.named_argument_listContext ctx) { }
	@Override public void enterRule(CSharp4Parser.named_argumentContext ctx) { }
	@Override public void exitRule(CSharp4Parser.named_argumentContext ctx) { }
	@Override public void enterRule(CSharp4Parser.attribute_argument_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.attribute_argument_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.class_modifier_unsafeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.class_modifier_unsafeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.struct_modifier_unsafeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.struct_modifier_unsafeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.interface_modifier_unsafeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.interface_modifier_unsafeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.delegate_modifier_unsafeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.delegate_modifier_unsafeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.field_modifier_unsafeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.field_modifier_unsafeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.method_modifier_unsafeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.method_modifier_unsafeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.property_modifier_unsafeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.property_modifier_unsafeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.event_modifier_unsafeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.event_modifier_unsafeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.indexer_modifier_unsafeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.indexer_modifier_unsafeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.operator_modifier_unsafeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.operator_modifier_unsafeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.constructor_modifier_unsafeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.constructor_modifier_unsafeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.destructor_declaration_unsafeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.destructor_declaration_unsafeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.static_constructor_modifiers_unsafeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.static_constructor_modifiers_unsafeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.embedded_statement_unsafeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.embedded_statement_unsafeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.unsafe_statementContext ctx) { }
	@Override public void exitRule(CSharp4Parser.unsafe_statementContext ctx) { }
	@Override public void enterRule(CSharp4Parser.type_unsafeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.type_unsafeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.pointer_typeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.pointer_typeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.unmanaged_typeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.unmanaged_typeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.primary_no_array_creation_expression_unsafeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.primary_no_array_creation_expression_unsafeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.unary_expression_unsafeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.unary_expression_unsafeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.pointer_indirection_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.pointer_indirection_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.pointer_member_accessContext ctx) { }
	@Override public void exitRule(CSharp4Parser.pointer_member_accessContext ctx) { }
	@Override public void enterRule(CSharp4Parser.pointer_element_accessContext ctx) { }
	@Override public void exitRule(CSharp4Parser.pointer_element_accessContext ctx) { }
	@Override public void enterRule(CSharp4Parser.addressof_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.addressof_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.sizeof_expressionContext ctx) { }
	@Override public void exitRule(CSharp4Parser.sizeof_expressionContext ctx) { }
	@Override public void enterRule(CSharp4Parser.fixed_statementContext ctx) { }
	@Override public void exitRule(CSharp4Parser.fixed_statementContext ctx) { }
	@Override public void enterRule(CSharp4Parser.fixed_pointer_declaratorsContext ctx) { }
	@Override public void exitRule(CSharp4Parser.fixed_pointer_declaratorsContext ctx) { }
	@Override public void enterRule(CSharp4Parser.fixed_pointer_declaratorContext ctx) { }
	@Override public void exitRule(CSharp4Parser.fixed_pointer_declaratorContext ctx) { }
	@Override public void enterRule(CSharp4Parser.fixed_pointer_initializerContext ctx) { }
	@Override public void exitRule(CSharp4Parser.fixed_pointer_initializerContext ctx) { }
	@Override public void enterRule(CSharp4Parser.struct_member_declaration_unsafeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.struct_member_declaration_unsafeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.fixed_size_buffer_declarationContext ctx) { }
	@Override public void exitRule(CSharp4Parser.fixed_size_buffer_declarationContext ctx) { }
	@Override public void enterRule(CSharp4Parser.fixed_size_buffer_modifiersContext ctx) { }
	@Override public void exitRule(CSharp4Parser.fixed_size_buffer_modifiersContext ctx) { }
	@Override public void enterRule(CSharp4Parser.fixed_size_buffer_modifierContext ctx) { }
	@Override public void exitRule(CSharp4Parser.fixed_size_buffer_modifierContext ctx) { }
	@Override public void enterRule(CSharp4Parser.buffer_element_typeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.buffer_element_typeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.fixed_size_buffer_declaratorsContext ctx) { }
	@Override public void exitRule(CSharp4Parser.fixed_size_buffer_declaratorsContext ctx) { }
	@Override public void enterRule(CSharp4Parser.fixed_size_buffer_declaratorContext ctx) { }
	@Override public void exitRule(CSharp4Parser.fixed_size_buffer_declaratorContext ctx) { }
	@Override public void enterRule(CSharp4Parser.local_variable_initializer_unsafeContext ctx) { }
	@Override public void exitRule(CSharp4Parser.local_variable_initializer_unsafeContext ctx) { }
	@Override public void enterRule(CSharp4Parser.stackalloc_initializerContext ctx) { }
	@Override public void exitRule(CSharp4Parser.stackalloc_initializerContext ctx) { }
	@Override public void enterRule(CSharp4Parser.literalContext ctx) { }
	@Override public void exitRule(CSharp4Parser.literalContext ctx) { }

	@Override public void enterEveryRule(ParserRuleContext<Token > ctx) { }
	@Override public void exitEveryRule(ParserRuleContext<Token > ctx) { }
	@Override public void visitTerminal(ParserRuleContext<Token > ctx, Token symbol) { }
}